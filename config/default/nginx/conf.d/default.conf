upstream example_com {

    server 127.0.0.1:3000 max_fails=0 fail_timeout=30s;
    keepalive 8;

}

#any include /home/example.com/config/production/nginx/any.d/default.conf;

#ftp upstream ftp_example_com {

#ftp     server filestash:8334 max_fails=0 fail_timeout=30s;
#ftp     keepalive 8;

#ftp }

server {

    listen 80;
    listen [::]:80;

    #ssl include /home/example.com/config/production/nginx/ssl.d/default.conf;

    server_name www.example.com;

    return 301 $scheme://example.com$request_uri;

}

server {

    listen 80;
    listen [::]:80;

    #ssl include /home/example.com/config/production/nginx/ssl.d/default.conf;

    server_name ftp.example.com;

    access_log /var/log/nginx/access_example.com.log;

    include /etc/nginx/bots.d/ddos.conf;
    include /etc/nginx/bots.d/blockbots.conf;

    keepalive_timeout 10;
    client_max_body_size 64m;

    if ( $request_method !~ ^(GET|POST|OPTIONS|DELETE)$ ) {
        return 444;
    }

    location / {
        auth_basic               "Login FTP!";
        auth_basic_user_file     /home/example.com/config/production/nginx/pass.d/example.com.pass;
        proxy_http_version       1.1;
        proxy_set_header         Upgrade $http_upgrade;
        proxy_set_header         Connection "upgrade";

        proxy_set_header         Host $host:$server_port;
        proxy_set_header         X-Real-IP $remote_addr;
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header         X-Forwarded-Proto $scheme;
        proxy_set_header         Origin '';

        add_header               Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        #ftp proxy_pass               http://ftp_example_com;
        proxy_read_timeout       86400;
    }

    include /home/example.com/config/production/nginx/error.d/default.conf;

}

server {

    listen 80;
    listen [::]:80;

    listen 6800;
    listen [::]:6800;

    #ssl include /home/example.com/config/production/nginx/ssl.d/default.conf;

    server_name torrent.example.com;

    root /home/example.com/files/torrent;
    index index.html;

    access_log /var/log/nginx/access_example.com.log;

    include /etc/nginx/bots.d/ddos.conf;
    include /etc/nginx/bots.d/blockbots.conf;

    keepalive_timeout 10;
    client_max_body_size 64m;

    if ( $request_method !~ ^(GET|POST|OPTIONS|DELETE)$ ) {
        return 444;
    }

    location ~* ^/+(config/+|)($|/+) {
        deny              all;
        access_log        off;
        error_log         off;
        return            404;
    }

    location / {
        auth_basic           "Login Cloud Torrent!";
        auth_basic_user_file /home/example.com/config/production/nginx/pass.d/example.com.pass;
        try_files $uri $uri/ =404;
    }

    location /jsonrpc {
        #torrent proxy_pass http://torrent:6800/jsonrpc;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    include /home/example.com/config/production/nginx/error.d/default.conf;

}

server {
    listen 80;
    listen [::]:80;

    #ssl include /home/example.com/config/production/nginx/ssl.d/default.conf;

    root /home/example.com;

    server_name .example.com;

    access_log /var/log/nginx/access_example.com.log;

    include /etc/nginx/bots.d/ddos.conf;
    include /etc/nginx/bots.d/blockbots.conf;

    keepalive_timeout 10;
    client_max_body_size 64m;

    if ( $request_method !~ ^(GET|POST)$ ) {
        return 444;
    }

    if ( $request_uri ~ "/index.html" ) {
        rewrite ^(.*)/ $1/ permanent;
    }

    location ~* ^/+(mobile-version/+|tv-version/+|)(doc|Dockerfile|config|modules|node_modules|lib|log|routes|core|files\/.*\.sub\.txt|app\.js|optimal\.js|package\.json|package-lock\.json|process\.json|restart\.server|LICENSE\.txt|README\.md|.*\.sh|.*\.conf|.*\.log|.*\.jade|.*\.ejs|\.git)($|/+) {
        deny              all;
        access_log        off;
        error_log         off;
        return            404;
    }

    location ~* ^/+files/+(poster|picture)/+(original|medium|small) {
        expires           1y;
        access_log        off;
        error_log         off;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        proxy_cache_valid 301 302 0;
        proxy_cache_valid 404 500 502 503 504 1m;
        proxy_cache_valid any 1y;
        try_files         $uri @proxy_node;
    }

    location ~* ^/+files/+poster/+people/+.*\.jpg {
        expires           1y;
        access_log        off;
        error_log         off;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        try_files         $uri /files/poster/people/no.jpg =404;
    }

    location ~* ^/+(files|themes/+.*/+public|favicon.*|android-chrome.*|apple-touch-icon\.png|mstile-150x150\.png|browserconfig\.xml|safari-pinned-tab\.svg|site\.webmanifest|(?!robots).*\.txt|.*\.pdf) {
        expires           1y;
        access_log        off;
        error_log         off;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
    }

    location ~* ^/+balancer/+([0-9]+)\.mp4 {
        rewrite           "^\/balancer\/([0-9]+)\.mp4" "/$1.mp4" break;
        root              /var/local/balancer;
        expires           1y;
        access_log        off;
        error_log         off;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        try_files         $uri /bbb.mp4 =404;
    }

    location / {
        if ($host ~* "^(m\.example.com)$") {
            rewrite ^(.*)$ /mobile-version$1 break;
        }
        if ($host ~* "^(tv\.example.com)$") {
            rewrite ^(.*)$ /tv-version$1 break;
        }

        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since        off;
        expires                  off;
        etag                     off;
        limit_req                zone=cinemapress burst=50;
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_set_header         Connection "";
        proxy_set_header         Host               $host;
        proxy_set_header         X-Real-IP          $remote_addr;
        proxy_set_header         X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header         X-Cloudflare-Proto $http_x_forwarded_proto;
        proxy_set_header         X-Forwarded-Proto  $scheme;
        proxy_http_version       1.1;
        proxy_pass               http://example_com;
    }

    location ~* ^/+(episode|iframe|episode\.json|iframe\.player|rss\.xml) {
        if ($host ~* "^(m\.example.com)$") {
            rewrite ^(.*)$ /mobile-version$1 break;
        }
        if ($host ~* "^(tv\.example.com)$") {
            rewrite ^(.*)$ /tv-version$1 break;
        }

        access_log               off;
        autoindex                off;
        expires                  1h;
        limit_req                zone=cinemapress burst=50;
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_set_header         Connection "";
        proxy_set_header         Host               $host;
        proxy_set_header         X-Real-IP          $remote_addr;
        proxy_set_header         X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header         X-Cloudflare-Proto $http_x_forwarded_proto;
        proxy_set_header         X-Forwarded-Proto  $scheme;
        proxy_http_version       1.1;
        proxy_pass               http://example_com;
    }

    location @proxy_node {
        access_log               off;
        autoindex                off;
        expires                  1y;
        limit_req                zone=images burst=200;
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_set_header         Cache-Control "public, no-transform";
        proxy_set_header         Connection "";
        proxy_set_header         Host               $host;
        proxy_set_header         X-Real-IP          $remote_addr;
        proxy_set_header         X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header         X-Cloudflare-Proto $http_x_forwarded_proto;
        proxy_set_header         X-Forwarded-Proto  $scheme;
        proxy_http_version       1.1;
        proxy_pass               http://example_com;
    }

    location ~* ^/+admin {
        auth_basic               "Login Admin!";
        auth_basic_user_file     /home/example.com/config/production/nginx/pass.d/example.com.pass;
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_set_header         Connection "";
        proxy_set_header         Host               $host;
        proxy_set_header         X-Real-IP          $remote_addr;
        proxy_set_header         X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header         X-Cloudflare-Proto $http_x_forwarded_proto;
        proxy_set_header         X-Forwarded-Proto  $scheme;
        proxy_http_version       1.1;
        proxy_pass               http://example_com;
    }

    include /home/example.com/config/production/nginx/error.d/default.conf;

}